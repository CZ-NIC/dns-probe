module cznic-dns-probe {

    yang-version "1.1";

    namespace "https://www.nic.cz/ns/yang/dns-probe";

    prefix "dp";

    import ietf-inet-types {
        prefix "inet";
    }

    import ietf-yang-types {
        prefix "yang";
    }

    organization
        "CZ.NIC, z. s. p. o.";

    contact
        "Editors:   Ladislav Lhotka
                    <mailto:lhotka@nic.cz>

                    Jan Dražil
                    <mailto:idrazil@fit.vutbr.cz>";

    description
        "This YANG module defines the data model for a DNS monitoring";

    revision 2019-12-02 {
        description
            "Initial revision.";
    }

    /* Groupings */

    grouping file-export-parameters {
        description
            "Parameters common to file exports.";
        leaf file-name-prefix {
            type string;
            default "dns_";
            description
            "Common prefix of export file names.";
        }

        leaf timeout {
            type uint32;
            units "seconds";
            default "0";
            description
                "Time interval after which the export file is rotated.

                The value of 0 (default) means no time-based rotation.";
        }

        leaf file-size-limit {
            type uint64;
            units "bytes";
            default "0";
            description
                "Size limit for the export file. If the limit is exceeded,
                the export file is rotated.

                The value of 0 (default) means no size-based rotation.";
        }
    }

    /* Configuration data */

    container dns-probe {
        description
            "Configuration of DNS Probe.";

        leaf coremask {
            type uint64 {
                range "7..max";
            }
            default "0x7";
            description
                "Coremask used fo selecting cores where application will be running.

                This is a static configuration parameter that is applied
                only upon restarting the probe.";
        }

        leaf dns-port {
            type uint16;
            default 53;
            description
                "Port used for identifying DNS traffic.

                This is a static configuration parameter that is applied
                only upon restarting the probe.";
        }

        container export {
            description
                "Configuration for exporting records";

            leaf export-format {
                type enumeration {
                    enum cdns {
                        description
                            "Export data in CDNS format";
                    }

                    enum parquet {
                        description
                            "Export data in Parquet format";
                    }
                }

                default parquet;

                description
                    "Format for exported data.

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }

            leaf cdns-fields {
                type bits {
                    bit transaction_id;
                    bit time_offset;
                    bit query_name;
                    bit client_hoplimit;
                    bit qr_transport_flags;
                    bit client_address;
                    bit client_port;
                    bit server_address;
                    bit server_port;
                    bit query_size;
                    bit qr_dns_flags;
                    bit query_ancount;
                    bit query_arcount;
                    bit query_nscount;
                    bit query_qdcount;
                    bit query_opcode;
                    bit response_rcode;
                    bit query_classtype;
                    bit query_edns_version;
                    bit query_edns_udp_size;
                    bit query_opt_rdata;
                    bit response_additional_sections; // Response OPT RR
                    bit response_size;
                }

                default "transaction_id time_offset query_name client_hoplimit qr_transport_flags
                         client_address client_port server_address server_port query_size qr_dns_flags
                         query_ancount query_arcount query_nscount query_qdcount query_opcode
                         response_rcode query_classtype query_edns_version query_edns_udp_size
                         query_opt_rdata response_additional_sections response_size";

                description
                    "C-DNS fields to export

                    Indicates which fields from the C-DNS standard schema should the application
                    export to output.

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }

            leaf cdns-records-per-block {
                type uint64;
                default 10000;
                description
                    "Maximum number of DNS records in one exported C-DNS block

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }

            leaf cdns-blocks-per-file {
                type uint64;
                default 0;
                description
                    "Maximum number of C-DNS blocks in one exported C-DNS file. If the limit
                    is reached, the export file is rotated.

                    The value of 0 (default) means no block count-based rotation.";
            }

            leaf parquet-records-per-file {
                type uint64;
                default 5000000;
                description
                    "Parquet records per file.

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }
        }

        container transaction-table {
            description
                "Configuration of transaction table parameters.";

            leaf max-transactions {
                type uint32;
                default "1048576";
                description
                    "Maximum number of entries in the transaction table.

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }

            leaf query-timeout {
                type uint64;
                units "milliseconds";
                default "60000";
                description
                    "Time interval after which a query record is removed from
                    the transaction database if no response is observed.";
            }

            leaf match-qname {
                type boolean;
                default "false";
                description
                    "If this flag is true, DNS QNAME (if present) is used as a
                    secondary key for matching requests with responses.";
            }
        }

        container tcp {
            description
                "Configuration of processing TCP connections";

            leaf concurrent-connections {
                type uint32;
                default "1048576";
                description
                    "Maximal number of concurrent TCP connections

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }

            leaf timeout {
                type uint64;
                units "milliseconds";
                default "1000";
                description
                    "Time interval after which a TCP connection is removed from
                    the transaction database if there is no data in the connection";
            }
        }

        container pcap-export {
            description
                "Configuration of PCAP file export parameters.";
            uses file-export-parameters;

            leaf selection {
                type enumeration {
                    enum all {
                        description
                            "Store all packets.";
                    }

                    enum invalid {
                        description
                            "Store only packets with invalid DNS
                            request/response.";
                    }

                    enum disabled {
                        description
                            "Turn off PCAP export.";
                    }
                }

                default "disabled";
                description
                    "Selection of packets to be stored in PCAP files.";
            }
        }

        container export-location {
            description
                "Configuration of the location for the storage of the exported
                DNS records (local, remote).";

            leaf location {
                type enumeration {
                    enum local {
                        description
                            "Store exported data to local files";
                    }

                    enum remote {
                        description
                            "Send exported data directly to a remote location";
                    }
                }

                default local;

                description
                    "Location for the storage of the exported DNS records.

                    This is a static configuration parameter that is applied
                    only upon restarting the probe.";
            }

            leaf remote-ip-version {
                type inet:ip-version;
                default unknown;
                description
                    "IP version of the IP address for remote export.";
            }

            leaf remote-ip-address {
                type inet:ip-address-no-zone;
                description
                    "IP address for remote export of the DNS records.";
            }

            leaf remote-port {
                type inet:port-number;
                default 6378;
                description
                    "Transport protocol port number for remote export of the DNS records.";
            }
        }
    }

    container statistics {
        config "false";
        description
            "A collection of probe statistics.";

        leaf processed-packets {
            type yang:counter64;
            description
                "Number of processed packets.";
        }

        leaf processed-transactions {
            type yang:counter64;
            description
                "Number of processed transactions.";
        }

        leaf exported-records {
            type yang:counter64;
            description
                "Number of exported records.";
        }

        leaf queries-per-second-ipv4 {
            type decimal64 {
                fraction-digits 2;
            }
            description
                "Processed queries per second with IPv4 packets";
        }

        leaf queries-per-second-ipv6 {
            type decimal64 {
                fraction-digits 2;
            }
            description
                "Processed queries per second with IPv6 packets";
        }

        leaf queries-per-second-tcp {
            type decimal64 {
                fraction-digits 2;
            }
            description
                "Processed queries per second with TCP packets";
        }

        leaf queries-per-second-udp {
            type decimal64 {
                fraction-digits 2;
            }
            description
                "Processed queries per second with UDP packets";
        }

        leaf queries-per-second {
            type decimal64 {
                fraction-digits 2;
            }
            description
                "Processed queries per second";
        }

        leaf pending-transactions {
            type yang:counter64;
            description
                "Number of pending transactions.";
        }

        leaf exported-pcap-packets {
            type yang:counter64;
            description
                "Number of packets exported to PCAP files.";
        }
    }

    rpc restart {
        description
            "Restart the probe and apply changes in static configuration.";
    }
}
